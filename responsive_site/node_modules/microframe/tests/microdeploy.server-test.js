/*jslint node: true, sloppy: true */
/*global YUI,YUITest */

YUI.add('microdeploy-addon-tests', function (Y, NAME) {

    var suite = new YUITest.TestSuite(NAME),
        A = YUITest.Assert;

    suite.add(new YUITest.TestCase({

        name: 'microdeploy-addon tests',

        setUp: function () {
            this.testBinderDefaultConfig = {
                "mojit": "configuration"
            };
            this.testBinders = {
                "yui_3_4_1_6_1340575901498_6": {
                    "action": "index",
                    "config": this.testBinderDefaultConfig,
                    "type": "TestMojit",
                    "viewId": "yui_3_4_1_6_1340575901498_6",
                    "guid": "yui_3_4_1_1_1340575901498_25",
                    "instanceId": "yui_3_4_1_1_1340575901498_25",
                    "name": "TestMojitBinderIndex",
                    "needs": {
                        "TestMojitBinderIndex": "/static/TestMojit/binders/index.js",
                        "oop": "http://yui.yahooapis.com/3.4.1/build/oop/oop-min.js",
                        "event-custom-base": "http://yui.yahooapis.com/3.4.1/build/event-custom-base/event-custom-base-min.js",
                        "event-custom-complex": "http://yui.yahooapis.com/3.4.1/build/event-custom-complex/event-custom-complex-min.js",
                        "intl": "http://yui.yahooapis.com/3.4.1/build/intl/intl-min.js",
                        "querystring-stringify-simple": "http://yui.yahooapis.com/3.4.1/build/querystring-stringify-simple/querystring-stringify-simple-min.js",
                        "io-base": "http://yui.yahooapis.com/3.4.1/build/io-base/io-base-min.js",
                        "dom-core": "http://yui.yahooapis.com/3.4.1/build/dom-core/dom-core-min.js",
                        "dom-base": "http://yui.yahooapis.com/3.4.1/build/dom-base/dom-base-min.js",
                        "selector-native": "http://yui.yahooapis.com/3.4.1/build/selector-native/selector-native-min.js",
                        "selector": "http://yui.yahooapis.com/3.4.1/build/selector/selector-min.js",
                        "node-core": "http://yui.yahooapis.com/3.4.1/build/node-core/node-core-min.js",
                        "node-base": "http://yui.yahooapis.com/3.4.1/build/node-base/node-base-min.js",
                        "event-base": "http://yui.yahooapis.com/3.4.1/build/event-base/event-base-min.js",
                        "event-delegate": "http://yui.yahooapis.com/3.4.1/build/event-delegate/event-delegate-min.js",
                        "mojito-perf": "/static/mojito/autoload/perf.client.js",
                        "mojito": "/static/mojito/autoload/mojito.common.js",
                        "mojito-logger": "/static/mojito/autoload/logger.common.js",
                        "mojito-loader": "/static/mojito/autoload/loader.common.js",
                        "mojito-config-addon": "/static/mojito/addons/ac/config.common.js",
                        "json-stringify": "http://yui.yahooapis.com/3.4.1/build/json-stringify/json-stringify-min.js",
                        "mojito-view-renderer": "/static/mojito/autoload/view-renderer.common.js",
                        "array-extras": "http://yui.yahooapis.com/3.4.1/build/array-extras/array-extras-min.js",
                        "mojito-util": "/static/mojito/autoload/util.common.js",
                        "mojito-output-adapter-addon": "/static/mojito/addons/ac/output-adapter.common.js",
                        "querystring-parse": "http://yui.yahooapis.com/3.4.1/build/querystring-parse/querystring-parse-min.js",
                        "mojito-route-maker": "/static/mojito/autoload/route-maker.common.js",
                        "mojito-url-addon": "/static/mojito/addons/ac/url.common.js",
                        "mojito-assets-addon": "/static/mojito/addons/ac/assets.common.js",
                        "cookie": "http://yui.yahooapis.com/3.4.1/build/cookie/cookie-min.js",
                        "mojito-cookie-addon": "/static/mojito/addons/ac/cookie.client.js",
                        "mojito-params-addon": "/static/mojito/addons/ac/params.common.js",
                        "mojito-composite-addon": "/static/mojito/addons/ac/composite.common.js",
                        "mojito-action-context": "/static/mojito/autoload/action-context.common.js",
                        "mojito-controller-context": "/static/mojito/autoload/controller-context.common.js",
                        "mojito-resource-store-adapter": "/static/mojito/autoload/resource-store-adapter.common.js",
                        "mojito-dispatcher": "/static/mojito/autoload/dispatch.common.js",
                        "mojito-client-store": "/static/mojito/autoload/store.client.js",
                        "mojito-mojit-proxy": "/static/mojito/autoload/mojit-proxy.client.js",
                        "breg": "/static/mojito/autoload/transport/beanregistry/registry.client-optional.js",
                        "dali-bean": "/static/mojito/autoload/transport/beanregistry/dali_bean.client-optional.js",
                        "dali-transport-base": "/static/mojito/autoload/transport/transport.client-optional.js",
                        "request-handler": "/static/mojito/autoload/transport/request_handler.client-optional.js",
                        "simple-request-formatter": "/static/mojito/autoload/transport/request_formatter.client-optional.js",
                        "json-parse": "http://yui.yahooapis.com/3.4.1/build/json-parse/json-parse-min.js",
                        "requestor": "/static/mojito/autoload/transport/requestor.client-optional.js",
                        "io-facade": "/static/mojito/autoload/transport/io_facade.client-optional.js",
                        "response-formatter": "/static/mojito/autoload/transport/response_formatter.client-optional.js",
                        "response-processor": "/static/mojito/autoload/transport/response_processor.client-optional.js",
                        "mojito-tunnel-client": "/static/mojito/autoload/tunnel.client-optional.js",
                        "mojito-output-handler": "/static/mojito/autoload/output-handler.client.js",
                        "mojito-client": "/static/mojito/autoload/mojito-client.client.js",
                        "mojito-mu": "/static/mojito/addons/view-engines/mu.client.js",
                        "AutoloadTest": "/static/app/autoloadtest.client.js"
                    }
                }

            };
        },

        tearDown: function () {
            this.ac = null;
            this.context = null;
            this.testBinderDefaultConfig = null;
            this.testBinders = null;
        },

        init: function (appConfig, deploy, context) {
            this.context = context || {
                lang: 'en-US',
                runtime: 'server'
            };

            this.ac = new Y.mojito.MockActionContext({
                addons: ['micro', 'config']
            });

            this.ac.app = {};
            this.ac.app.config = appConfig;
            this.ac.context = this.context;

            this.ac.config.expect({
                method: 'get',
                callCount: 1,
                args: ['deploy'],
                returns: deploy
            });

            return new Y.mojito.addons.ac.microdeploy({}, {}, this.ac);
        },

        'test addon:addBaseJs': function () {
            var addon = this.init({}, true);

            this.ac.micro.expect({
                method: 'addJs',
                callCount: 2,
                args: [YUITest.Mock.Value.String],
                run: function (url) {
                    A.isTrue((url.indexOf('yui.yahooapis.com') >= 0) || (url === 'Microframe/autoload/micro.client.js'));
                }
            });

            addon.addBaseJs();

            /* verify mocks expectations */
            YUITest.Mock.verify(this.ac);
            YUITest.Mock.verify(this.ac.micro);
        },

        'test addon:addBaseJs:customYUI': function () {
            var addon = this.init({
                yui: {
                    url: 'http://yui.yahooapis.com/3.4.1/build/yui/yui-min.js'
                }
            }, true);

            this.ac.micro.expect({
                method: 'addJs',
                callCount: 2,
                args: [YUITest.Mock.Value.String],
                run: function (url) {
                    A.isTrue((url === 'http://yui.yahooapis.com/3.4.1/build/yui/yui-min.js') || (url === 'Microframe/autoload/micro.client.js'));
                }
            });

            addon.addBaseJs();

            /* verify mocks expectations */
            YUITest.Mock.verify(this.ac);
            YUITest.Mock.verify(this.ac.micro);
        },

        'test addon:processBinders': function () {
            var addon = this.init({}, true),
                binders,
                originalBinder;

            this.ac.micro.expect({
                method: 'addJs',
                callCount: 2,
                args: [YUITest.Mock.Value.String],
                run: function (url) {
                    A.isTrue((url === 'TestMojit/binders/index.js') || (url === 'app/autoloadtest.client.js'));
                }
            });

            binders = addon.processBinders(this.testBinders, {});
            originalBinder = this.testBinders.yui_3_4_1_6_1340575901498_6;

            A.isNotNull(binders);
            A.areSame(1, binders.length);
            A.areSame(originalBinder.name, binders[0].module);
            A.areSame(originalBinder.type, binders[0].type);
            A.areSame(originalBinder.action, binders[0].action);
            A.areSame(originalBinder.instanceId, binders[0].instanceId);
            A.areSame('#' + originalBinder.viewId, binders[0].selector);
            A.isNull(binders[0].config);
        },

        'test addon:processBinders:defaultConfig': function () {
            var addon = this.init({}, true),
                binders;

            this.ac.micro.expect({
                method: 'addJs',
                callCount: 2,
                args: [YUITest.Mock.Value.String]
            });

            binders = addon.processBinders(this.testBinders, {
                binderConfig: {
                    'yui_3_4_1_1_1340575901498_25': true
                }
            });

            A.areSame(this.testBinderDefaultConfig, binders[0].config);
        },

        'test addon:processBinders:customConfig': function () {
            var addon = this.init({}, true),
                customConfig = {
                    isCustom: true
                },
                binders;

            this.ac.micro.expect({
                method: 'addJs',
                callCount: 2,
                args: [YUITest.Mock.Value.String]
            });

            binders = addon.processBinders(this.testBinders, {
                binderConfig: {
                    'yui_3_4_1_1_1340575901498_25': customConfig
                }
            });

            A.areSame(customConfig, binders[0].config);
        },

        'test addon:buildTopBlob': function () {
            var addon = this.init({}, true),
                markup;

            markup = addon.buildTopBlob({
                top: {
                    css: ['http://yui.yahooapis.com/3.5.1/build/cssreset/cssreset-min.css', 'http://yui.yahooapis.com/3.5.1/build/cssgrids/grids-min.css', 'http://l.yimg.com/os/mit/media/themes/black171a21/theme-min-420185.css', 'http://l.yimg.com/os/mit/media/themes/black171a21/theme-imagery-min-361046.css', '/static/Mojit/assets/index.css'],
                    js: ['http://l.yimg.com/os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js', 'http://l.yimg.com/os/mit/media/m/socialchrome/socialchrome-base-min-516188.js', '/static/Mojit/binder/index.js'],
                    blob: ['test blob content']
                }
            });

            A.isTrue(markup.indexOf('href="http://yui.yahooapis.com/combo?3.5.1/build/cssreset/cssreset-min.css&3.5.1/build/cssgrids/grids-min.css"') >= 0);
            A.isTrue(markup.indexOf('href="http://l.yimg.com/zz/combo?os/mit/media/themes/black171a21/theme-min-420185.css&os/mit/media/themes/black171a21/theme-imagery-min-361046.css"') >= 0);
            A.isTrue(markup.indexOf('href="/static/Mojit/assets/index.css"') >= 0);
            A.isTrue(markup.indexOf('src="http://l.yimg.com/zz/combo?os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js&os/mit/media/m/socialchrome/socialchrome-base-min-516188.js"') >= 0);
            A.isTrue(markup.indexOf('src="/static/Mojit/binder/index.js"') >= 0);
            A.isTrue(markup.indexOf('test blob content') >= 0);
        },

        'test addon:buildTopBlob:noDuplicates': function () {
            var addon = this.init({}, true),
                markup;

            markup = addon.buildTopBlob({
                top: {
                    css: ['http://l.yimg.com/os/mit/media/themes/black171a21/theme-min-420185.css', 'http://l.yimg.com/os/mit/media/themes/black171a21/theme-imagery-min-361046.css', 'http://l.yimg.com/os/mit/media/themes/black171a21/theme-imagery-min-361046.css'],
                    js: ['http://l.yimg.com/os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js', 'http://l.yimg.com/os/mit/media/m/socialchrome/socialchrome-base-min-516188.js', 'http://l.yimg.com/os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js']

                }
            });

            A.isTrue(markup.indexOf('href="http://l.yimg.com/zz/combo?os/mit/media/themes/black171a21/theme-min-420185.css&os/mit/media/themes/black171a21/theme-imagery-min-361046.css"') >= 0);
            A.isTrue(markup.indexOf('src="http://l.yimg.com/zz/combo?os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js&os/mit/media/m/socialchrome/socialchrome-base-min-516188.js"') >= 0);
        },

        'test addon:buildTopBlob:customComboDomain': function () {
            var addon = this.init({
                    staticHandling: {
                        combo: ['d.yimg.com', 's.yimg.com']
                    }
                }, true),
                markup;

            markup = addon.buildTopBlob({
                top: {
                    js: ['http://d.yimg.com/os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js', 'http://d.yimg.com/os/mit/media/m/socialchrome/socialchrome-base-min-516188.js', '/static/Mojit/binder/index.js']
                }
            });

            A.isTrue(markup.indexOf('src="http://d.yimg.com/zz/combo?os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js&os/mit/media/m/socialchrome/socialchrome-base-min-516188.js"') >= 0);
            A.isTrue(markup.indexOf('src="/static/Mojit/binder/index.js"') >= 0);
        },

        'test addon:buildBottomBlob': function () {
            var addon = this.init({}, true),
                binder = {
                    module: 'TestMojitIndexBinder',
                    type: 'TestMojit',
                    action: 'index',
                    instanceId: 'yui_3_4_1_6_1340575901498_6',
                    selector: '#node',
                    config: null
                },
                markup;

            markup = addon.buildBottomBlob({
                bottom: {
                    css: ['http://yui.yahooapis.com/3.5.1/build/cssreset/cssreset-min.css', 'http://yui.yahooapis.com/3.5.1/build/cssgrids/grids-min.css', 'http://l.yimg.com/os/mit/media/themes/black171a21/theme-min-420185.css', 'http://l.yimg.com/os/mit/media/themes/black171a21/theme-imagery-min-361046.css', '/static/Mojit/assets/index.css'],
                    js: ['http://yui.yahooapis.com/3.5.1/build/yui/yui-min.js', 'http://l.yimg.com/os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js', 'http://l.yimg.com/os/mit/media/m/socialchrome/socialchrome-base-min-516188.js', '/static/Mojit/binder/index.js'],
                    blob: ['test blob content']
                }
            }, [binder]);

            A.isTrue(markup.indexOf('href="http://yui.yahooapis.com/combo?3.5.1/build/cssreset/cssreset-min.css&3.5.1/build/cssgrids/grids-min.css"') >= 0);
            A.isTrue(markup.indexOf('href="http://l.yimg.com/zz/combo?os/mit/media/themes/black171a21/theme-min-420185.css&os/mit/media/themes/black171a21/theme-imagery-min-361046.css"') >= 0);
            A.isTrue(markup.indexOf('href="/static/Mojit/assets/index.css"') >= 0);
            A.isTrue(markup.indexOf('src="http://yui.yahooapis.com/3.5.1/build/yui/yui-min.js"') >= 0);
            A.isTrue(markup.indexOf('src="http://l.yimg.com/zz/combo?os/mit/media/m/socialchrome/socialchrome-conf-min-591302.js&os/mit/media/m/socialchrome/socialchrome-base-min-516188.js"') >= 0);
            A.isTrue(markup.indexOf('src="/static/Mojit/binder/index.js"') >= 0);
            A.isTrue(markup.indexOf('test blob content') >= 0);
            A.isTrue(markup.indexOf('YUI') >= 0);
            A.isTrue(markup.indexOf('.use') >= 0);
            A.isTrue(markup.indexOf('Y.Micro.Init') >= 0);
            A.isTrue(markup.indexOf(JSON.stringify(binder)) >= 0);
        },

        'test addon:buildBottomBlob:noBinders': function () {
            var addon = this.init({}, true),
                markup;

            markup = addon.buildBottomBlob({}, null);

            A.isTrue(markup.indexOf('YUI') >= 0);
            A.isTrue(markup.indexOf('.use') >= 0);
            A.isTrue(markup.indexOf('Y.Micro.Init') >= 0);
        },

        'test addon:buildBottomBlob:customYUIConfig': function () {
            var yuiConfig = {
                    combine: true
                },
                addon = this.init({
                    yui: {
                        config: yuiConfig
                    }
                }, true),
                markup;

            markup = addon.buildBottomBlob({}, null);

            A.isTrue(markup.indexOf('YUI') >= 0);
            A.isTrue(markup.indexOf('.use') >= 0);
            A.isTrue(markup.indexOf('Y.Micro.Init') >= 0);
            A.isTrue(markup.indexOf(JSON.stringify(yuiConfig)) >= 0);
        },


        'test addon:defaultYUILang': function () {
            var addon = this.init({}, true),
                markup = addon.buildBottomBlob({}, null),
                langIndex = markup.indexOf('"en-US"') >= 0;

            A.isTrue(langIndex >= 0);
            A.isTrue(langIndex < markup.indexOf(')'));
            A.isTrue(markup.indexOf('maxURLLength:2000') >= 0);
        },

        'test addon:customYUILang': function () {
            var addon = this.init({
                    yui: {
                        config: {
                            lang: "{lang}"
                        }
                    }
                }, true, {
                    lang: 'de-DE'
                }),
                markup = addon.buildBottomBlob({}, null),
                langIndex = markup.indexOf('"de-DE"') >= 0;

            A.isTrue(langIndex >= 0);
            A.isTrue(langIndex < markup.indexOf(')'));
        }

    }));

    YUITest.TestRunner.add(suite);

}, '0.0.1', {requires: ['mojito-test', 'microdeploy-addon']});